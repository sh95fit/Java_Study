package JavaStudy01;

public class Java18_4 {
//	메서드의 4가지 형태
//	1. 매개변수와 반환값이 모두 없는 형태
//	메소드 실행 시 필요한 데이터(변수)를 메소드 내부에서 선언, 사용, 삭제
//	메소드 연산 시 필요한 데이터가 늘 같으므로 연산결과가 동일함
//	메소드의 연산 결과를 메소드 내부에서 출력함
	
	void sum() {
		int x = 100;
		int y = 200;
		int result = x+y;
		
		System.out.println("두 수의 덧셈 결과 : " + result);
	}
	
	
//	2. 매개변수는 존재하고, 반환값은 없는 형태
//	메소드 실행 시 필요한 데이터를 메소드 외부에서 전달 받아 사용하고 삭제
//	메소드 연산 시 필요한 데이터가 늘 변경되므로 연산 결과가 달라짐
//	메소드의 연산 결과를 메소드 내부에서 출력함
	
	void sub(int x, int y) {
		int result = x - y;
		
		System.out.println("두 수의 뺄셈 결과 : " + result);
	}
	
	
//	3. 매개변수는 없고, 반환값이 있는 형태
//	메소드 실행 시 필요한 데이터(변수)를 메소드 내부에서 선언, 사용, 삭제
//	메소드 실행 시 필요한 데이터가 늘 같으므로 연산 결과가 늘 동일함
//	메소드의 연산 결과를 메소드 외부로 출력하여 외부에서 활용
	
	int multi() {
		int x = 100;
		int y = 200;
		int result = x*y;
		return result;
	}
	
//	4. 매개변수와 반환값이 모두 있는 형태
//	메소드 실행 시 필요한 데이터를 메소드 외부에서 전달 받아 사용, 삭제
//	메소드 실행 시 필요한 데이터가 늘 변경되므로 연산 결과가 달라짐
//	메소드의 연산 결과를 메소드 외부로 출력하여 메소드 외부에서 활용함
	
	double div(int x, int y) {
		double result = (double) x / (double) y;
		return result;
	}
	
}
